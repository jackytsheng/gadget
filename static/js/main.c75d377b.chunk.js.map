{"version":3,"sources":["components/Profile/Profile.jsx","components/Navbar/Navbar.jsx","components/Display/Display.jsx","routes/Home/Home.jsx","Layout/CenterWrapper/CenterWrapper.jsx","Layout/FillCanvas/FillCanvas.jsx","components/SudokuSolver/components/Grid/Grid.jsx","components/SudokuSolver/SudokuSolver.jsx","Layout/FullSizeCanvas/FullSizeCanvas.jsx","routes/Root.jsx","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","url","useLocation","console","log","pathname","path","Layout","section","Home","props","state","redirect","handleClick","bind","this","setState","Profile","Navbar","onClick","to","Display","header","React","Component","children","Input","input","borderColor","bg","defaultProps","handleChange","errorQueue","validError","y","x","result","forEach","cor","CenterWrapper","FillCanvas","renderArray","row","push","key","onFocus","e","currentTarget","select","onChange","Math","floor","required","type","maxLength","gridGenerator","SudokuGridWrapper","Title","SubTitle","FlexVerticalWrapper","WarningFlexWrapper","LoaderWrapper","grid","SudokuSolver","loading","axios","post","JSON","stringify","then","res","data","catch","err","filterArray","filter","n","validCoordinate","preventDefault","value","target","validate","parseInt","registerNumberOnGrid","test","count","CircularProgress","color","Grid","Button","variant","postGrid","disabled","length","countGrid","Alert","severity","MINIMUM_INPUT","basename","exact","FullSizeCanvas","Root","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"ueAIA,IAAMA,EAAUC,IAAOC,IAAV,KAQE,oBAAM,kBAACF,EAAD,O,wJCTrB,IAAMA,EAAUC,IAAOC,IAAV,KAOE,oBAAM,kBAAC,EAAD,O,oICNrB,IAAMF,EAAUC,IAAOC,IAAV,KAME,aACb,IAAIC,EAAMC,cAEV,OADAC,QAAQC,IAAIH,EAAII,UAEd,kBAAC,IAAD,CAAOC,KAAML,GACX,kBAAC,EAAD,Q,0KCRN,IAAMM,EAASR,IAAOS,QAAV,KAqCGC,E,kDA5Bb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,UAAS,GAEX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALH,E,0DAWhBC,KAAKC,SAAS,CAAEJ,UAAU,IAAO,WAAKT,QAAQC,IAAI,kB,+BAIlD,OACE,kBAACG,EAAD,KACE,kBAACU,EAAD,MACA,kBAACC,EAAD,MACA,4BAAQC,QAAWJ,KAAKF,aAAxB,YAGCE,KAAKJ,MAAMC,SAAW,kBAAC,IAAD,CAAUQ,GAAG,kBAAqB,KACzD,kBAACC,EAAD,CAASC,OAAO,wB,GAxBLC,IAAMC,W,iSCZzB,IAAM1B,EAAUC,IAAOC,IAAV,KAaE,kBAAEyB,EAAF,EAAEA,SAAF,OAAc,kBAAC,EAAD,KAAUA,I,2ICbvC,IAAM3B,EAAUC,IAAOC,IAAV,KAQE,kBAAEyB,EAAF,EAAEA,SAAF,OAAc,kBAAC,EAAD,KAAUA,I,ybCNvC,IAAMC,EAAQ3B,IAAO4B,MAAV,KAIW,SAAAjB,GAAK,OAAIA,EAAMkB,eAIf,SAAAlB,GAAK,OAAIA,EAAMmB,MAIrCH,EAAMI,aAAe,CACnBD,GAAI,QACJD,YAAa,SAGf,IAAM9B,EAAUC,IAAOC,IAAV,KAUE,cAAmC,IAAhC+B,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC1BC,EAAa,SAACD,EAAWE,EAAEC,GAC/B,IAAIC,GAAS,EAMb,OALAJ,EAAWK,SAAQ,SAACC,GACdA,EAAIJ,IAAMA,GAAKI,EAAIH,IAAMA,IAC3BC,GAAS,MAGNA,GAkCP,OACA,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KAnCgB,WAEpB,IADA,IAAIC,EAAc,GADO,WAEhBP,GAEP,IADA,IAAIQ,EAAM,GAHa,WAIdP,GACLO,EAAIC,KACF,kBAACJ,EAAD,CAAeK,IAAG,wBAAmBV,EAAnB,YAAwBC,EAAxB,MAChB,kBAACT,EAAD,CACEmB,QAAS,SAACC,GAAD,OAAOA,EAAEC,cAAcC,UAChCC,SAAU,SAACH,GACTf,EAAae,EAAGZ,EAAGC,IAErBP,YAAaK,EAAWD,EAAYE,EAAGC,GAvClC,UAuCoD,KACzDN,GACGqB,KAAKC,MAAMhB,EAAI,GAAK,IAAM,GAAKe,KAAKC,MAAMjB,EAAI,GAAK,IAAM,GACzDgB,KAAKC,MAAMhB,EAAI,GAAK,IAAM,GAAKe,KAAKC,MAAMjB,EAAI,GAAK,IAAM,EACtD,KA1CH,UA6CHU,IAAG,mBAAcV,EAAd,YAAmBC,EAAnB,KACHiB,UAAQ,EACRC,KAAK,OACLC,UAAU,SAlBXnB,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAuBPM,EAAYE,KAAKD,IAzBZR,EAAI,EAAGA,EAAI,EAAGA,IAAK,EAAnBA,GA2BP,OAAOO,EAMKc,O,0kCCrEhB,IAGMC,EAAoBzD,IAAOC,IAAV,KAOjByD,GAAQ1D,IAAOC,IAAV,KAML0D,GAAW3D,IAAOC,IAAV,KAKR2D,GAAsB5D,IAAOC,IAAV,KAQnB4D,GAAqB7D,IAAOC,IAAV,KAQlB6D,GAAe9D,IAAOC,IAAT,KAaf8D,GAAO,CACT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IA2KZC,G,kDAtKb,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXmD,QACA9B,WAAW,GACXgC,SAAQ,GAGV,EAAKjC,aAAe,EAAKA,aAAajB,KAAlB,gBARH,E,mLAYjBC,KAAKC,SAAS,CAACgD,SAAQ,I,SACjBC,IACHC,KA5EL,gFA4EsB,CAChB,KAAOC,KAAKC,UAAUrD,KAAKJ,MAAMmD,QAElCO,MAAK,SAACC,GACL,EAAKtD,SAAS,CACZgD,SAAS,EACT5B,OAAQkC,EAAIC,OAEdpE,QAAQC,IAAIkE,EAAIC,SAEjBC,OAAM,SAAAC,GACH,EAAKzD,SAAS,CAAEgD,SAAS,IACzB7D,QAAQC,IAAIqE,M,4IA0CJvC,EAAEC,GAChB,IAAIuC,EAAc3D,KAAKJ,MAAMqB,WAAW2C,QAAO,SAACrC,GAAD,OAAUA,EAAIJ,IAAMA,GAAKI,EAAIH,IAAMA,KAClFpB,KAAKC,SAAS,CAACgB,WAAW0C,M,2CAGPxC,EAAGC,EAAGyC,GAAI,IAAD,OAC5Bd,GAAK5B,GAAGC,GAAKyC,EACb7D,KAAKC,SAAS,CAAE8C,UAAO,kBAAK,EAAKe,gBAAgB3C,EAAEC,Q,mCAExCW,EAAGZ,EAAGC,GACjBW,EAAEgC,iBADkB,IAGVC,GAAUjC,EAAEkC,OAAOD,MAAQjC,EAAEkC,OAAS,CAAED,MAAO,IAA/CA,MACV,GAAIhE,KAAKkE,SAASF,IAAuC,IAA7BG,SAASpC,EAAEkC,OAAOD,OAE5ChE,KAAKoE,qBAAqBjD,EAAGC,EAAG+C,SAASH,QACpC,CACL,IAAI/C,EAAajB,KAAKJ,MAAMqB,WAC5BA,EAAWW,KAAK,CAAET,IAAGC,MACrBpB,KAAKC,SAAS,CAAEgB,kB,+BAGX+C,GAEP,QADc,QACJK,KAAKL,K,kCAKL,IACHjB,EAAQ/C,KAAKJ,MAAbmD,KACHuB,EAAQ,EAMZ,OALAvB,EAAKzB,SAAQ,SAAAK,GAAG,OAAEA,EAAIL,SAAQ,SAAAuC,GACrB,IAAJA,GACDS,UAGGA,I,+BAGC,IAAD,OACP,OACE,kBAAC9C,EAAD,KACE,kBAACoB,GAAD,KACE,kBAACF,GAAD,sBACA,kBAACC,GAAD,yBAEF,kBAACC,GAAD,KACE,kBAACH,EAAD,KACGzC,KAAKJ,MAAMqD,QACZ,kBAACH,GAAD,KACE,kBAACyB,EAAA,EAAD,CAAkBC,MAAM,aACT,KAEjB,kBAACC,EAAD,CACEzD,aAAchB,KAAKgB,aACnBC,WAAYjB,KAAKJ,MAAMqB,cAG3B,kBAACyD,EAAA,EAAD,CACEC,QAAQ,YACRH,MAAM,UACNpE,QAAS,SAAC2B,GACV3C,QAAQC,IAAI,EAAKO,MAAMmD,MACvB,EAAK6B,YAELC,WAEqC,IAAjC7E,KAAKJ,MAAMqB,WAAW6D,QACtB9E,KAAK+E,YAzMC,KA+LZ,SAiBA,kBAAClC,GAAD,KACG7C,KAAK+E,YAjNI,GAiN0B,KAClC,kBAACC,EAAA,EAAD,CAAOC,SAAS,SAAhB,YACW,gCAASC,IADpB,0BAKgC,IAAjClF,KAAKJ,MAAMqB,WAAW6D,OAAe,KACpC,kBAACE,EAAA,EAAD,CAAOC,SAAS,SAAhB,qBACoB,uCADpB,Y,GAzJazE,IAAMC,W,+JCpEjC,IAAM1B,GAAUC,IAAOC,IAAV,MASE,mBAAEyB,EAAF,EAAEA,SAAF,OAAc,kBAAC,GAAD,KAAUA,ICLxB,qBACb,kBAAC,IAAD,CAAQyE,SAAS,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO5F,KAAK,IAAI6F,OAAK,GACnB,kBAACC,GAAD,KACE,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAO9F,KAAK,gBAAgB6F,OAAK,GAC/B,kBAACC,GAAD,KACE,kBAAC,GAAD,WCZK,qBAAI,kBAACC,GAAD,OCOCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEd7C,OAAM,SAAA8C,GACLnH,QAAQmH,MAAMA,EAAMC,c","file":"static/js/main.c75d377b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n  margin-top:50px;\n  height: 150px;\n  border: solid black 1px;\n  width: 150px;\n  border-radius:50%;\n`;\n\nexport default () => <Wrapper/>\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 50px;\n  border: solid black 1px;\n  width: 300px;\n  margin: 30px 0;\n`;\n\nexport default () => <Wrapper />;\n","import React from \"react\";\nimport { Route, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height:300px;\n  border: solid black 1px;\n  width:300px;\n`\n\nexport default () => {\n  let url = useLocation();\n  console.log(url.pathname);\n  return (\n    <Route path={url}>\n      <Wrapper>\n      </Wrapper>\n    </Route>\n  );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport Profile from '../../components/Profile';\nimport Navbar from \"../../components/Navbar\";\nimport Display from \"../../components/Display\";\nimport {Redirect} from 'react-router-dom';\n\nconst Layout = styled.section`\n  display:flex;\n  flex-direction:column;\n  justify-content:space-evenly;\n  align-items:center;\n`;\n\n\nclass Home extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      redirect:false\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n\n  handleClick(){\n\n    this.setState({ redirect: true },()=>{console.log(\"i got run\")});\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Profile />\n        <Navbar />\n        <button onClick = {this.handleClick}>\n          Redirect\n        </button>\n        {this.state.redirect ? <Redirect to=\"/sudokusolver\" /> : null}\n        <Display header=\"Current Header\" />\n      </Layout>\n    );\n  }\n}\nexport default Home;\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  @media (max-width: 850px) {\n    flex-direction: column;\n  }\n`;\n\nexport default ({children})=><Wrapper>{children}</Wrapper>","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position:absolute;\n  top:0;\n  bottom:0;\n  left:0;\n  right:0;\n`\n\nexport default ({children})=><Wrapper>{children}</Wrapper>","import React from \"react\";\nimport styled from \"styled-components\";\nimport CenterWrapper from '../../../../Layout/CenterWrapper';\nimport FillCanvas from '../../../../Layout/FillCanvas';\n\nconst Input = styled.input`\n  width: 80%;\n  height: 80%;\n  border-radius:2px;\n  border: 2px solid ${props => props.borderColor};\n  font-weight: 700;\n  text-align: center;\n  font-size: 20px;\n  background-color: ${props => props.bg};\n`\nconst errorColor = \"#db6f93\";\nconst greyTile = \"#dedde5\";\nInput.defaultProps = {\n  bg: \"white\",\n  borderColor: \"black\",\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  width:100%;\n  height:100%;\n  grid-template-columns: repeat(9, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n`;\n\n\n\nexport default ({ handleChange, errorQueue }) => {\nconst validError = (errorQueue,y,x) => {\n  let result = false;\n  errorQueue.forEach((cor) => {\n    if (cor.y === y && cor.x === x) {\n      result = true;\n    }\n  });\n  return result;\n}\nconst gridGenerator = () =>{\n  let renderArray = []\n  for (let y = 0; y < 9; y++){\n    let row = [];\n    for (let x = 0; x < 9; x++) {\n        row.push(\n          <CenterWrapper key={`Grid_Wrapper_(${y},${x})`}>\n            <Input\n              onFocus={(e) => e.currentTarget.select()}\n              onChange={(e) => {\n                handleChange(e, y, x);\n              }}\n              borderColor={validError(errorQueue, y, x) ? errorColor : null}\n              bg={\n                (Math.floor(x / 3) % 2 === 0 && Math.floor(y / 3) % 2 === 0) ||\n                (Math.floor(x / 3) % 2 === 1 && Math.floor(y / 3) % 2 === 1)\n                  ? null\n                  : greyTile\n              }\n              key={`Grid_ID_(${y},${x})`}\n              required\n              type=\"text\"\n              maxLength=\"1\"\n            />\n          </CenterWrapper>\n        );\n        }\n      renderArray.push(row);\n    }\n    return renderArray;\n\n}\n  return (\n  <CenterWrapper>\n    <FillCanvas>\n      <Wrapper>{gridGenerator()}</Wrapper>\n    </FillCanvas>\n  </CenterWrapper>);\n}\n\n","import React from \"react\";\nimport CenterWrapper from \"../../Layout/CenterWrapper\";\nimport styled from \"styled-components\";\nimport Grid from './components/Grid';\nimport {Button,CircularProgress} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport axios from \"axios\";\n\nconst MINIMUM_INPUT = 19;\nconst SOLVER_URL =\n  \"https://umvovqu86c.execute-api.ap-southeast-2.amazonaws.com/test/sudokusolver\";\nconst SudokuGridWrapper = styled.div`\n  width: 415px;\n  height: 400px;\n  margin-bottom:20px;\n  border-radius: 5px;\n  position:relative;\n`;\nconst Title = styled.div`\n  width:415px;\n  margin-bottom:20px;\n  font-size:50px;\n  font-weight:700;\n`\nconst SubTitle = styled.div`\n  width: 415px;\n  font-size: 20px;\n`;\n\nconst FlexVerticalWrapper = styled.div`\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n  position:relative;\n` \n\nconst WarningFlexWrapper = styled.div`\n  margin-top: 10px;\n  position: absolute;\n  bottom: -100px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LoaderWrapper =styled.div`\n  z-index:5;\n  background-color: rgba(0,0,0,0.4);\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  bottom:0;\n  left:0;\n  right:0;\n  top:0;\n  position:absolute;\n`\n\nlet grid = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\n// better not do any algorithm at the client site .. too slow\nclass SudokuSolver extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid,\n      errorQueue:[],\n      loading:false,\n      // validGrid:true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async postGrid(){\n    this.setState({loading:true});\n    await axios\n      .post(SOLVER_URL, {\n        \"grid\":JSON.stringify(this.state.grid),\n      })\n      .then((res) => {\n        this.setState({\n          loading: false,\n          result: res.data,\n        });\n        console.log(res.data);\n      })\n      .catch(err=>{\n          this.setState({ loading: false });\n          console.log(err);\n        });\n  }\n  \n//   isValidNumber(y,x,n){\n//     const {grid} = this.state;\n//     for (let i = 0; i < 9; i++) {\n//       if (grid[y][i] === n) {\n//         this.setState({validGrid: false });\n//         return \n//       }\n//     }\n\n//     for (let i = 0; i < 9; i++) {\n//       if (grid[i][x] === n) {\n//         this.setState({validGrid: false });\n//         return \n//       }\n//     }\n//     const x_0 = Math.floor(x / 3) * 3;\n//     const y_0 = Math.floor(y / 3) * 3;\n//     for (let i = 0; i < 3; i++) {\n//       for (let j = 0; j < 3; j++) {\n//         if (grid[y_0 + i][x_0 + j] === n) {\n//           this.setState({validGrid: false });\n//           return \n//         }\n//       }\n//     }\n//     this.setState({validGrid: true });\n// }\n\n// // isValidGrid(){\n// //   for (let i = 0; i < 9; i++) {\n// //       for (let j = 0; j < 9; j++) {\n// //         if (this.state.grid[i][j]!==0){\n// //           this.isValidNumber(i, j, this.state.grid[i][j]);\n// //         }\n// //       }\n// //     }\n// // }\n\n  validCoordinate(y,x){\n    let filterArray = this.state.errorQueue.filter((cor) => (cor.y !== y || cor.x !== x));\n    this.setState({errorQueue:filterArray});\n  }\n\n  registerNumberOnGrid(y, x, n) {\n    grid[y][x] = n;\n    this.setState({ grid },()=> this.validCoordinate(y,x));\n  }\n  handleChange(e, y, x) {\n    e.preventDefault();\n    \n      const { value } = e.target.value ? e.target : { value: 0 };\n    if (this.validate(value) && parseInt(e.target.value) !== 0) {\n      // this.isValidGrid();\n      this.registerNumberOnGrid(y, x, parseInt(value));\n    } else {\n      let errorQueue = this.state.errorQueue;\n      errorQueue.push({ y, x });\n      this.setState({ errorQueue });\n    }\n  }\n  validate(value) {\n    const regex = /[0-9]/;\n    if (regex.test(value)) {\n      return true;\n    }\n    return false;\n  }\n  countGrid(){\n    const {grid} = this.state;\n    let count = 0;\n    grid.forEach(row=>row.forEach(n => {\n      if(n!==0){\n        count ++;\n      }\n    }))\n    return count;\n  }\n\n  render() {\n    return (\n      <CenterWrapper>\n        <FlexVerticalWrapper>\n          <Title>Sudoku Solver</Title>\n          <SubTitle>By Jiajin Zheng</SubTitle>\n        </FlexVerticalWrapper>\n        <FlexVerticalWrapper>\n          <SudokuGridWrapper>\n            {this.state.loading?\n            <LoaderWrapper>\n              <CircularProgress color=\"primary\" />\n            </LoaderWrapper>:null\n            }\n            <Grid\n              handleChange={this.handleChange}\n              errorQueue={this.state.errorQueue}\n            />\n          </SudokuGridWrapper>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            onClick={(e) => {\n            console.log(this.state.grid)\n            this.postGrid();\n            }}\n            disabled={\n              !(\n                this.state.errorQueue.length === 0 &&\n                this.countGrid() > MINIMUM_INPUT \n              )\n            }\n          >\n            Solve\n          </Button>\n\n          <WarningFlexWrapper>\n            {this.countGrid() > MINIMUM_INPUT ? null : (\n              <Alert severity=\"error\">\n                At least <strong>{MINIMUM_INPUT + 1}</strong> numbers are\n                required.\n              </Alert>\n            )}\n            {this.state.errorQueue.length === 0 ? null : (\n              <Alert severity=\"error\">\n                Please input only <strong>1-9</strong>.\n              </Alert>\n            )}\n            {/* {this.state.validGrid ? null : (\n              <Alert severity=\"error\">No duplicated input is allowed.</Alert>\n            )} */}\n          </WarningFlexWrapper>\n        </FlexVerticalWrapper>\n      </CenterWrapper>\n    );\n  }\n} \n\nexport default SudokuSolver;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position:fixed;\n  min-height:100vh;\n  top:0;\n  bottom:0;\n  left:0;\n  right:0;\n`\n\nexport default ({children})=><Wrapper>{children}</Wrapper>","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './Home';\nimport SudokuSolver from '../components/SudokuSolver';\nimport FullSizeCanvas from '../Layout/FullSizeCanvas';\n\n//TODO: Fixed the Client router problem with Gh-pages\nexport default () => (\n  <Router basename=\"/\">\n    <Switch>\n      <Route path=\"/\" exact>\n        <FullSizeCanvas>\n          <Home />\n        </FullSizeCanvas>\n      </Route>\n      <Route path=\"/sudokusolver\" exact>\n        <FullSizeCanvas>\n          <SudokuSolver />\n        </FullSizeCanvas>\n      </Route>\n    </Switch>\n  </Router>\n);","import React from 'react';\nimport Root from './routes/Root';\n\n\n\nexport default ()=><Root/>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}