{"version":3,"sources":["components/Profile/Profile.jsx","components/Navbar/Navbar.jsx","components/Display/Display.jsx","routes/Home/Home.jsx","Layout/CenterWrapper/CenterWrapper.jsx","Layout/FillCanvas/FillCanvas.jsx","components/SudokuSolver/components/Grid/Grid.jsx","components/SudokuSolver/SudokuSolver.jsx","Layout/FullSizeCanvas/FullSizeCanvas.jsx","routes/Root.jsx","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","url","useLocation","console","log","pathname","path","Layout","section","Profile","Navbar","Display","header","children","Input","input","props","borderColor","bg","defaultProps","Grid","state","error","renderArray","y","row","x","push","CenterWrapper","key","onChange","e","handleChange","Math","floor","required","type","maxLength","FillCanvas","this","gridGenerator","React","Component","SudokuGridWrapper","Title","SubTitle","FlexVerticalWrapper","grid","SudokuSolver","bind","n","setState","preventDefault","value","target","validate","registerNumberOnGrid","parseInt","test","Button","variant","color","onClick","basename","exact","FullSizeCanvas","Home","Root","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b7fc13e5.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n  margin-top:50px;\n  height: 150px;\n  border: solid black 1px;\n  width: 150px;\n  border-radius:50%;\n`;\n\nexport default () => <Wrapper/>\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 50px;\n  border: solid black 1px;\n  width: 300px;\n  margin: 30px 0;\n`;\n\nexport default () => <Wrapper />;\n","import React from \"react\";\nimport { Route, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  height:300px;\n  border: solid black 1px;\n  width:300px;\n`\n\nexport default () => {\n  let url = useLocation();\n  console.log(url.pathname);\n  return (\n    <Route path={url}>\n      <Wrapper>\n      </Wrapper>\n    </Route>\n  );\n};","import React from 'react';\nimport styled from 'styled-components';\nimport Profile from '../../components/Profile';\nimport Navbar from \"../../components/Navbar\";\nimport Display from \"../../components/Display\";\n\n\nconst Layout = styled.section`\n  display:flex;\n  flex-direction:column;\n  justify-content:space-evenly;\n  align-items:center;\n`;\n\nexport default () => (\n  <Layout>\n    <Profile/>\n    <Navbar/>\n    <Display header = \"Current Header\"/>\n  </Layout>)","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  @media (max-width: 850px) {\n    flex-direction: column;\n  }\n`;\n\nexport default ({children})=><Wrapper>{children}</Wrapper>","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position:absolute;\n  top:0;\n  bottom:0;\n  left:0;\n  right:0;\n`\n\nexport default ({children})=><Wrapper>{children}</Wrapper>","import React from \"react\";\nimport styled from \"styled-components\";\nimport CenterWrapper from '../../../../Layout/CenterWrapper';\nimport FillCanvas from '../../../../Layout/FillCanvas';\n\nconst Input = styled.input`\n  width: 80%;\n  height: 80%;\n  border-radius:2px;\n  border: 2px solid ${props => props.borderColor};\n  font-weight: 700;\n  text-align: center;\n  font-size: 20px;\n  background-color: ${props => props.bg};\n`\nconst errorColor = \"#db6f93\";\nconst greyTile = \"#dedde5\";\nInput.defaultProps = {\n  bg: \"white\",\n  borderColor: \"black\",\n};\n\nconst Wrapper = styled.div`\n  display: grid;\n  width:100%;\n  height:100%;\n  grid-template-columns: repeat(9, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n`;\n\n\n\nclass Grid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      error:\"\",\n    }\n  }\n\ngridGenerator(){\n  let renderArray = []\n  for (let y = 0; y < 9; y++){\n    let row = [];\n    for (let x = 0; x < 9; x++) {\n        row.push(\n          <CenterWrapper key={`Grid_Wrapper_(${y},${x})`}>\n            <Input\n              onChange={(e) => {\n                this.props.handleChange(e, y, x);\n              }}\n              borderColor={this.state.error ? errorColor : null}\n              bg={\n                (Math.floor(x / 3) % 2 === 0 && Math.floor(y / 3) % 2 === 0) ||\n                (Math.floor(x / 3) % 2 === 1 && Math.floor(y / 3) % 2 === 1)\n                  ? null\n                  : greyTile\n              }\n              key={`Grid_ID_(${y},${x})`}\n              required\n              type=\"text\"\n              maxLength=\"1\"\n            />\n          </CenterWrapper>\n        );\n        }\n      renderArray.push(row);\n    }\n    return renderArray;\n  }\n  render(){\n    return (\n    <CenterWrapper>\n      <FillCanvas>\n        <Wrapper>{this.gridGenerator()}</Wrapper>\n      </FillCanvas>\n    </CenterWrapper>)\n  }\n}\n\nexport default Grid;\n","import React from \"react\";\nimport CenterWrapper from \"../../Layout/CenterWrapper\";\nimport styled from \"styled-components\";\nimport Grid from './components/Grid';\nimport Button from \"@material-ui/core/Button\";\n\n\n\nconst SudokuGridWrapper = styled.div`\n  width: 415px;\n  height: 400px;\n  margin-bottom:20px;\n  border-radius: 5px;\n`;\nconst Title = styled.div`\n  width:415px;\n  margin-bottom:20px;\n  font-size:50px;\n  font-weight:700;\n`\nconst SubTitle = styled.div`\n  width: 415px;\n  font-size: 20px;\n`;\n\nconst FlexVerticalWrapper = styled.div`\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n` \nlet grid = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0],\n];\n\n\nclass SudokuSolver extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  registerNumberOnGrid(y, x, n) {\n    grid[y][x] = n;\n    this.setState({ grid });\n  }\n  handleChange(e, y, x) {\n    e.preventDefault();\n    const { value } = e.target.value ? e.target : { value: 0 };\n    if (this.validate(value)) {\n      this.registerNumberOnGrid(y, x, parseInt(value));\n    }\n  }\n  validate(value) {\n    const regex = /[0-9]/;\n    if (regex.test(value)) {\n      this.setState({ error: \"\" });\n      return true;\n    }\n    this.setState({ error: `${value} is not a valid number` }, () =>\n      console.log(this.state.error)\n    );\n    return false;\n  }\n\n  render() {\n    return (\n      <CenterWrapper>\n        <FlexVerticalWrapper>\n          <Title>Sudoku Solver</Title>\n          <SubTitle>By Jiajin Zheng</SubTitle>\n        </FlexVerticalWrapper>\n        <FlexVerticalWrapper>\n          <SudokuGridWrapper>\n            <Grid handleChange={this.handleChange} />\n          </SudokuGridWrapper>\n          <Button variant=\"contained\" color=\"default\" onClick={e=>console.log(this.state.grid)}>\n            Solve\n          </Button>\n        </FlexVerticalWrapper>\n      </CenterWrapper>\n    );\n  }\n} \n\nexport default SudokuSolver;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position:fixed;\n  min-height:100vh;\n  top:0;\n  bottom:0;\n  left:0;\n  right:0;\n`\n\nexport default ({children})=><Wrapper>{children}</Wrapper>","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './Home';\nimport SudokuSolver from '../components/SudokuSolver';\nimport FullSizeCanvas from '../Layout/FullSizeCanvas';\n\nexport default () => (\n  <Router basename=\"/\">\n    <Switch>\n      <Route path=\"/\" exact>\n        <FullSizeCanvas>\n          <Home />\n        </FullSizeCanvas>\n      </Route>\n      <Route path=\"/sudokusolver\" exact>\n        <FullSizeCanvas>\n          <SudokuSolver />\n        </FullSizeCanvas>\n      </Route>\n    </Switch>\n  </Router>\n);","import React from 'react';\nimport Root from './routes/Root';\n\n\n\nexport default ()=><Root/>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}